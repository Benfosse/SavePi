{"_id":"line-reader","_rev":"33-02e14135090cb2a86147354a1c3c1bc7","name":"line-reader","description":"Asynchronous, buffered, line-by-line file/stream reader","dist-tags":{"latest":"0.4.0"},"versions":{"0.1.0":{"name":"line-reader","version":"0.1.0","description":"Asynchronous line-by-line file reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"engines":{"node":"0.4.x"},"directories":{"lib":"./lib"},"repository":{"type":"git","url":"http://github.com/nickewing/line-reader.git"},"_id":"line-reader@0.1.0","_engineSupported":true,"_npmVersion":"0.2.18","_nodeVersion":"v0.4.0","files":[""],"_defaultsLoaded":true,"dist":{"shasum":"e1287491bd5072e61adc8a8c02d26a4ca0d2ac3d","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.1.0.tgz"}},"0.1.1":{"name":"line-reader","version":"0.1.1","description":"Asynchronous line-by-line file reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"engines":{"node":"0.4.x"},"directories":{"lib":"./lib"},"repository":{"type":"git","url":"http://github.com/nickewing/line-reader"},"_id":"line-reader@0.1.1","_engineSupported":true,"_npmVersion":"0.2.18","_nodeVersion":"v0.4.0","files":[""],"_defaultsLoaded":true,"dist":{"shasum":"a24a90a4adc3eb51cd1e91cbb379f2a980c0e452","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.1.1.tgz"}},"0.1.2":{"name":"line-reader","version":"0.1.2","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"engines":{"node":"0.4.x"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.1.2","_engineSupported":true,"_npmVersion":"0.2.18","_nodeVersion":"v0.4.0","files":[""],"_defaultsLoaded":true,"dist":{"shasum":"ae146e39bd6c0f72c3d2266e1e555188939ec36c","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.1.2.tgz"}},"0.1.3":{"name":"line-reader","version":"0.1.3","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"engines":{"node":"0.4.x"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.1.3","_engineSupported":true,"_npmVersion":"0.2.18","_nodeVersion":"v0.4.0","files":[""],"_defaultsLoaded":true,"dist":{"shasum":"6155e9d8a8e24116b1dd111f5ec06f5576e899ff","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.1.3.tgz"}},"0.2.0":{"name":"line-reader","version":"0.2.0","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"engines":{"node":"0.4.x"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.2.0","dist":{"shasum":"7e951bae2fa96d344ec8188eb886b491e25c330a","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.2.0.tgz"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}]},"0.2.1":{"name":"line-reader","version":"0.2.1","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.2.1","dist":{"shasum":"9845d8ca0d117a7b37bd43fc2f6a332d080ab705","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.2.1.tgz"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}]},"0.2.2":{"name":"line-reader","version":"0.2.2","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.2.2","dist":{"shasum":"80ed19e5340e099ac747f92984775cf3ea9ac87e","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.2.2.tgz"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}]},"0.2.3":{"name":"line-reader","version":"0.2.3","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"_id":"line-reader@0.2.3","dist":{"shasum":"1810e624061453c245e02692105c29a281565d3f","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.2.3.tgz"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}]},"0.2.4":{"name":"line-reader","version":"0.2.4","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"https://nickewing@github.com/nickewing/line-reader.git"},"gitHead":"c6c4fa96e8f17adbd12f205baae040e126d7fd30","bugs":{"url":"https://github.com/nickewing/line-reader/issues"},"homepage":"https://github.com/nickewing/line-reader","_id":"line-reader@0.2.4","scripts":{},"_shasum":"c4392b587dea38580c9678570e6e8e49fce52622","_from":"./","_npmVersion":"1.5.0-alpha-3","_npmUser":{"name":"nickewing","email":"nick@nickewing.net"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}],"dist":{"shasum":"c4392b587dea38580c9678570e6e8e49fce52622","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.2.4.tgz"}},"0.3.0":{"name":"line-reader","version":"0.3.0","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","repository":{"type":"git","url":"git+https://nickewing@github.com/nickewing/line-reader.git"},"gitHead":"3a5197a68e6b88bb9df7c75d51531542b8394a14","bugs":{"url":"https://github.com/nickewing/line-reader/issues"},"homepage":"https://github.com/nickewing/line-reader#readme","_id":"line-reader@0.3.0","scripts":{},"_shasum":"d973cf15a51c2c018e0312d9e55089d90c8a64e2","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"nickewing","email":"nick@nickewing.net"},"dist":{"shasum":"d973cf15a51c2c018e0312d9e55089d90c8a64e2","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.3.0.tgz"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}]},"0.3.1":{"name":"line-reader","version":"0.3.1","description":"Asynchronous line-by-line file reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"license":"MIT","bugs":{"url":"https://github.com/nickewing/line-reader/issues"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","scripts":{"test":"mocha test/line_reader.js"},"repository":{"type":"git","url":"git+https://nickewing@github.com/nickewing/line-reader.git"},"devDependencies":{"mocha":"^2.4.5"},"gitHead":"f3ec9817a673a18d2a4fee162023613e94c952f2","homepage":"https://github.com/nickewing/line-reader#readme","_id":"line-reader@0.3.1","_shasum":"2158c06b1ab3ed28238535b97aaeba9f17949bbb","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.6.0","_npmUser":{"name":"nickewing","email":"nick@nickewing.net"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}],"dist":{"shasum":"2158c06b1ab3ed28238535b97aaeba9f17949bbb","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.3.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/line-reader-0.3.1.tgz_1458087549700_0.1651789399329573"}},"0.4.0":{"name":"line-reader","version":"0.4.0","description":"Asynchronous, buffered, line-by-line file/stream reader","url":"https://github.com/nickewing/line-reader","keywords":["file","line","reader","scanner"],"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"license":"MIT","bugs":{"url":"https://github.com/nickewing/line-reader/issues"},"directories":{"lib":"./lib"},"main":"./lib/line_reader","scripts":{"test":"mocha test/line_reader.js"},"repository":{"type":"git","url":"git+https://nickewing@github.com/nickewing/line-reader.git"},"devDependencies":{"mocha":"^2.4.5"},"gitHead":"bd38cc8c5483e4b6799c01bc9b88819fda1461c7","homepage":"https://github.com/nickewing/line-reader#readme","_id":"line-reader@0.4.0","_shasum":"17e44818da0ac335675ba300954f94ef670e66fd","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.6.0","_npmUser":{"name":"nickewing","email":"nick@nickewing.net"},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}],"dist":{"shasum":"17e44818da0ac335675ba300954f94ef670e66fd","tarball":"https://registry.npmjs.org/line-reader/-/line-reader-0.4.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/line-reader-0.4.0.tgz_1458196332410_0.8783941068686545"}}},"maintainers":[{"name":"nickewing","email":"nick@nickewing.net"}],"time":{"modified":"2017-05-18T20:07:21.724Z","created":"2011-03-16T07:41:18.922Z","0.1.0":"2011-03-16T07:41:19.519Z","0.1.1":"2011-03-16T07:42:34.139Z","0.1.2":"2011-03-16T07:57:08.657Z","0.1.3":"2011-03-20T02:20:28.565Z","0.2.0":"2012-07-13T08:10:26.586Z","0.2.1":"2012-07-13T08:12:57.870Z","0.2.2":"2012-08-19T02:26:04.103Z","0.2.3":"2012-09-05T05:52:11.455Z","0.2.4":"2014-07-18T19:52:32.832Z","0.3.0":"2015-10-13T07:41:52.647Z","0.3.1":"2016-03-16T00:19:10.135Z","0.4.0":"2016-03-17T06:32:12.897Z"},"author":{"name":"Nick Ewing","email":"nick@nickewing.net"},"repository":{"type":"git","url":"git+https://nickewing@github.com/nickewing/line-reader.git"},"readme":"Line Reader\n===========\n\nAsynchronous, buffered, line-by-line file/stream reader with support for\nuser-defined line separators.\n\nInstall\n-------\n\n`npm install line-reader`\n\nUsage\n-----\n\nThe `eachLine` function reads each line of the given file.  Upon each new line,\nthe given callback function is called with two parameters: the line read and a\nboolean value specifying whether the line read was the last line of the file.\nIf the callback returns `false`, reading will stop and the file will be closed.\n\n    var lineReader = require('line-reader');\n\n    lineReader.eachLine('file.txt', function(line, last) {\n      console.log(line);\n\n      if (/* done */) {\n        return false; // stop reading\n      }\n    });\n\n`eachLine` can also be used in an asynchronous manner by providing a third\ncallback parameter like so:\n\n    var lineReader = require('line-reader');\n\n    lineReader.eachLine('file.txt', function(line, last, cb) {\n      console.log(line);\n\n      if (/* done */) {\n        cb(false); // stop reading\n      } else {\n        cb();\n      }\n    });\n\nYou can provide an optional second node-style callback that will be called with\n`(err)` on failure or `()` when finished (even if you manually terminate iteration\nby returning `false` from the iteratee):\n\n    var lineReader = require('line-reader');\n\n    // read all lines:\n    lineReader.eachLine('file.txt', function(line) {\n      console.log(line);\n    }).then(function (err) {\n      if (err) throw err;\n      console.log(\"I'm done!!\");\n    });\n\nFor more granular control, `open`, `hasNextLine`, and `nextLine` maybe be used\nto iterate a file (but you must `close` it yourself):\n\n    // or read line by line:\n    lineReader.open('file.txt', function(err, reader) {\n      if (err) throw err;\n      if (reader.hasNextLine()) {\n        reader.nextLine(function(err, line) {\n          try {\n            if (err) throw err;\n            console.log(line);\n          } finally {\n            reader.close(function(err) {\n              if (err) throw err;          \n            });\n          }\n        });\n      }\n      else {\n        reader.close(function(err) {\n          if (err) throw err;          \n        });\n      }\n    });\n\nYou may provide additional options in a hash before the callbacks to `eachLine` or `open`:\n* `separator`   - a `string` or `RegExp` separator (defaults to `/\\r\\n?|\\n/`)\n* `encoding`    - file encoding (defaults to `'utf8'`)\n* `bufferSize`  - amount of bytes to buffer (defaults to 1024)\n\nFor example:\n\n    lineReader.eachLine('file.txt', {separator: ';', encoding: 'utf8'}, function(line, last, cb) {\n      console.log(line);\n    });\n    lineReader.open('file.txt', {bufferSize: 1024}, function(err, reader) {\n      ...\n    }); \n\nStreams\n-------\n\nBoth `eachLine` and `open` support passing either a file name or a read stream:\n\n    // reading from stdin\n    lineReader.eachLine(process.stdin, function(line) {});\n\n    // reading with file position boundaries\n    var readStream = fs.createReadStream('test.log', { start: 0, end: 10000 });\n    lineReader.eachLine(readStream, function(line) {});\n\nNote however that if you're reading user input from stdin then the\n[readline module](https://nodejs.org/api/readline.html) is probably a better choice.\n\nPromises\n--------\n\n`eachLine` and `open` are compatible with `promisify` from [bluebird](https://github.com/petkaantonov/bluebird/blob/master/API.md#promisepromisifyfunction-nodefunction--dynamic-receiver---function):\n\n    var lineReader = require('line-reader'),\n        Promise = require('bluebird');\n\n    var eachLine = Promise.promisify(lineReader.eachLine);\n    eachLine('file.txt', function(line) {\n      console.log(line);\n    }).then(function() {\n      console.log('done');\n    }).catch(function(err) {\n      console.error(err);\n    });\n\nIf you're using a promise library that doesn't have a promisify function, here's how you can do it:\n\n    var lineReader = require('line-reader'),\n        Promise = require(...);\n\n    var eachLine = function(filename, options, iteratee) {\n      return new Promise(function(resolve, reject) {\n        lineReader.eachLine(filename, options, iteratee, function(err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n    eachLine('file.txt', function(line) {\n      console.log(line);\n    }).then(function() {\n      console.log('done');\n    }).catch(function(err) {\n      console.error(err);\n    });\n\nContributors\n------------\n\n* Nick Ewing\n* Andy Edwards (jedwards1211)\n* Jameson Little (beatgammit)\n* Masum (masumsoft)\n* Matthew Caruana Galizia (mattcg)\n* Ricardo Bin (ricardohbin)\n\nPaul Em has also written a reverse-version of this gem to read files from bottom to top: [reverse-line-reader](https://github.com/paul-em/reverse-line-reader).\n\nCopyright 2011 Nick Ewing.\n","homepage":"https://github.com/nickewing/line-reader#readme","keywords":["file","line","reader","scanner"],"bugs":{"url":"https://github.com/nickewing/line-reader/issues"},"readmeFilename":"README.md","users":{"dennisgnl":true,"tinyhill":true,"salarsayyad":true,"f124275809":true,"jeltok":true,"saintedlama":true,"ferrari":true,"mingzhangyang":true,"auther2":true,"d7game":true,"shavyg2":true},"license":"MIT","_attachments":{},"_etag":"\"591dfef9-3e8c\""}